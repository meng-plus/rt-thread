name: doc_doxygen
on:
  push:
    branches:
      - 'doc-page'

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    name: doxygen_doc generate
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          fetch-depth: 0
      - name: Install Tools
        shell: bash
        run: |
          # 使用默认源安装工具
          sudo apt-get update
          sudo apt-get -qq install doxygen graphviz zip openjdk-11-jre
      - name: Set Environment Variables
        shell: bash
        run: |
          echo "BUILD_DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV
          echo "SHORT_SHA=${GITHUB_SHA:0:7}" >> $GITHUB_ENV
          # 如果是标签触发则提取版本号
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
            echo "VERSION=${VERSION/v/}" >> $GITHUB_ENV
          fi
      - name: generate doxygen html
        shell: bash
        continue-on-error: true
        run: |
          cd documentation
          # 临时禁用 PlantUML 以避免错误
          sed -i 's/PLANTUML_JAR_PATH.*/PLANTUML_JAR_PATH = /' Doxyfile
          sed -i 's/HAVE_DOT.*/HAVE_DOT = NO/' Doxyfile
          if ! doxygen Doxyfile; then
            echo "Doxygen failed, but workflow will continue."
          fi
      - name: Package doxygen html
        shell: bash
        run: |
          cd documentation
          zip -r ../doxygen-html.zip html
      - name: Create Release and Upload Asset
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.VERSION || format('nightly-{0}', env.BUILD_DATE) }}
          name: ${{ format('{0} Build', env.VERSION || 'Nightly') }} (${{ env.BUILD_DATE }})
          body: |
            自动发布于 ${{ env.BUILD_DATE }}
             Commit: [${{ env.SHORT_SHA }}](${{ github.repository }}/commit/${{ github.sha }})
          files: doxygen-html.zip
          prerelease: ${{ !env.VERSION }}